/*
** This is array of analyzer instances generated by AnalyzersFactory
** for TickerProcessor to process his candles.
*/

const AnalyzersIO = require("./AnalyzerIO");

class AnalyzersBox {

    constructor(factory,ordersManager,candleProcessor) {
        this.factory = factory;
        this.analyzers = [];
        this.io = new AnalyzersIO(this,ordersManager,candleProcessor);
        this.io.init();
    }

    hasAnalyzer(analyzerName) {
        const found = this.analyzers.find( a => a.getId() == analyzerName );
        if (found) { return found };
        return null;
    }

    addAnalyzer(analyzerName) {
        const found =  this.hasAnalyzer(analyzerName);
        if (found) { return found };

        const i = this.factory.getInstance(analyzerName);
        if (! i ) { throw new Error('ANBOX: no such analyzer '+analyzerName); };

        i.init(this.io);
        this.analyzers.push(i);
        return i;
    }

    addCandle(candle, flags) {
        this.io.setCurrentCandleAndFlags(candle,flags);
        this.analyzers.forEach( (analyzer) => {
            analyzer.addCandle(candle, this.io);
        });
    }

    forgetBefore(timestamp)
    {
        this.analyzers.forEach( (analyzer) => {
            analyzer.forgetBefore(timestamp);
        });
    }

}

module.exports = AnalyzersBox;